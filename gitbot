#!/usr/bin/env ruby

require "date"
require "cinch"
require "cinch/plugins/identify"
require "sinatra"
require "yaml"
require "json"

config_file = ARGV.shift || "config.yml"
if not File.exists? config_file
  puts "Can't find config file #{config_file}"
  puts "Either create it or specify another config file with: #{File.basename $0} [filename]"
  exit
end

$config = YAML.load_file config_file

$bot = Cinch::Bot.new do
  configure do |c|
    c.nick = $config["irc"]["nick"]
    #c.password = $config["irc"]["password"]
    c.user = "gitbot"
    c.realname = "GitBot"
    c.server = $config["irc"]["server"]
    c.port = $config["irc"]["port"]
    c.channels = $config["irc"]["channels"]
    c.plugins.plugins = [Cinch::Plugins::Identify]
    c.plugins.options[Cinch::Plugins::Identify] = {
        :password	=> $config["irc"]["password"],
	:type		=> :nickserv,
    }
  end
end

Thread.new do
  $bot.start
end

def say(repo,msg)
  $config["irc"]["channels"].each do |chan|
    unless $config["filters"].include? chan and not $config["filters"][chan].include? repo
      $bot.Channel(chan).send msg
    end
  end
end

configure do
  set :bind, $config["http"]["host"]
  set :port, $config["http"]["port"]
  set :logging, false
  set :lock, true
end

get "/" do
  "GitBot lives here. Direct your hooks to /github."
end

post "/github" do
  jsoncont = request.body.read
  p jsoncont
  push = JSON.parse(jsoncont)

  repo = push["repository"]["name"]
  branch = push["ref"].gsub(/^refs\/heads\//,"")

  # sort commits by timestamp
  #push["commits"].sort! do |a,b|
  #  ta = tb = nil
  #  begin
  #    ta = DateTime.parse(a["timestamp"])
  #  rescue ArgumentError
  #    ta = Time.at(a["timestamp"].to_i)
  #  end

  #  begin
  #    tb = DateTime.parse(b["timestamp"])
  #  rescue ArgumentError
  #    tb = Time.at(b["timestamp"].to_i)
  #  end
    
  #  ta <=> tb
  #end

  # new push
  say repo, "new commit - \0030#{repo}\003 \[\0037#{branch}\003\] by \0033#{push["commits"][0]["author"]["name"]}\003 (#{push["commits"][0]["id"].slice!(0..6)}) #{push["commits"][0]["message"]}"

  # new tag push


  # new issue

  # new merge request

  push.inspect
end
